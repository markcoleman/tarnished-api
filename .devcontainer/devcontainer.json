// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/debian
{
	"name": "Tarnished API - Rust Development",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/base:bullseye",
	"features": {
		"ghcr.io/devcontainers/features/rust:1": {
			"version": "1.86",
			"profile": "default"
		},
		"ghcr.io/devcontainers/features/docker-in-docker:2": {},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
			"version": "latest",
			"helm": "latest",
			"minikube": "none"
		}
	},
	"customizations": {
		"vscode": {
			"extensions": [
				// Rust Development
				"rust-lang.rust-analyzer",
				"serayuzgur.crates",
				"vadimcn.vscode-lldb",
				"fill-labs.dependi",
				
				// Code Quality & Formatting
				"editorconfig.editorconfig",
				"streetsidesoftware.code-spell-checker",
				
				// Git & GitHub
				"github.vscode-github-actions",
				"github.vscode-pull-request-github",
				"eamodio.gitlens",
				
				// DevOps & Containers
				"ms-azuretools.vscode-docker",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				
				// Productivity
				"openai.chatgpt",
				"ms-vscode.vscode-json",
				"redhat.vscode-yaml",
				"tamasfe.even-better-toml",
				
				// Task Runner
				"skellock.just"
			],
			"settings": {
				"rust-analyzer.checkOnSave.command": "clippy",
				"rust-analyzer.checkOnSave.extraArgs": ["--", "-D", "warnings"],
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.fixAll.clippy": "explicit"
				}
			}
		}
	},
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [8080],
	"portsAttributes": {
		"8080": {
			"label": "Tarnished API",
			"onAutoForward": "notify"
		}
	},
	
	// Post-creation commands to set up the development environment
	"postCreateCommand": "rustup component add clippy rustfmt && cargo install cargo-watch cargo-audit cargo-outdated just && just setup",
	
	// Set environment variables
	"containerEnv": {
		"RUST_LOG": "debug",
		"RUST_BACKTRACE": "1"
	}
}
