name: Rust CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - 'CODEOWNERS'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - 'CODEOWNERS'

permissions:
  contents: read
  actions: write
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      NEW_RELIC_INSERT_KEY: ${{ secrets.NEW_RELIC_INSERT_KEY }}
      NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      REPOSITORY: ${{ github.repository }}
      WORKFLOW: ${{ github.workflow }}
      JOB: ${{ github.job }}
      RUN_ID: ${{ github.run_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build artifacts
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - name: Build
        run: |
          start_time=$(date +%s)
          cargo build --verbose
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          curl -X POST "https://insights-collector.newrelic.com/v1/accounts/${NEW_RELIC_ACCOUNT_ID}/events" \
            -H "Content-Type: application/json" \
            -H "X-Insert-Key: ${NEW_RELIC_INSERT_KEY}" \
            -d "[{
              \"eventType\": \"GitHubActionsCI\",
              \"repository\": \"${REPOSITORY}\",
              \"workflow\": \"${WORKFLOW}\",
              \"job\": \"${JOB}\",
              \"step\": \"Build\",
              \"duration\": ${duration},
              \"run_id\": \"${RUN_ID}\",
              \"timestamp\": \"${timestamp}\"
            }]"

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    env:
      NEW_RELIC_INSERT_KEY: ${{ secrets.NEW_RELIC_INSERT_KEY }}
      NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      REPOSITORY: ${{ github.repository }}
      WORKFLOW: ${{ github.workflow }}
      JOB: ${{ github.job }}
      RUN_ID: ${{ github.run_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build artifacts
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - name: Run Tests
        run: |
          start_time=$(date +%s)
          cargo test --verbose
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          curl -X POST "https://insights-collector.newrelic.com/v1/accounts/${NEW_RELIC_ACCOUNT_ID}/events" \
            -H "Content-Type: application/json" \
            -H "X-Insert-Key: ${NEW_RELIC_INSERT_KEY}" \
            -d "[{
              \"eventType\": \"GitHubActionsCI\",
              \"repository\": \"${REPOSITORY}\",
              \"workflow\": \"${WORKFLOW}\",
              \"job\": \"${JOB}\",
              \"step\": \"Run Tests\",
              \"duration\": ${duration},
              \"run_id\": \"${RUN_ID}\",
              \"timestamp\": \"${timestamp}\"
            }]"

  clippy:
    name: Run Clippy
    runs-on: ubuntu-latest
    needs: build
    env:
      NEW_RELIC_INSERT_KEY: ${{ secrets.NEW_RELIC_INSERT_KEY }}
      NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      REPOSITORY: ${{ github.repository }}
      WORKFLOW: ${{ github.workflow }}
      JOB: ${{ github.job }}
      RUN_ID: ${{ github.run_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build artifacts
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - name: Run Clippy
        run: |
          start_time=$(date +%s)
          cargo clippy --all-targets --all-features -- -D warnings
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          curl -X POST "https://insights-collector.newrelic.com/v1/accounts/${NEW_RELIC_ACCOUNT_ID}/events" \
            -H "Content-Type: application/json" \
            -H "X-Insert-Key: ${NEW_RELIC_INSERT_KEY}" \
            -d "[{
              \"eventType\": \"GitHubActionsCI\",
              \"repository\": \"${REPOSITORY}\",
              \"workflow\": \"${WORKFLOW}\",
              \"job\": \"${JOB}\",
              \"step\": \"Run Clippy\",
              \"duration\": ${duration},
              \"run_id\": \"${RUN_ID}\",
              \"timestamp\": \"${timestamp}\"
            }]"

  docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    needs: build
    env:
      NEW_RELIC_INSERT_KEY: ${{ secrets.NEW_RELIC_INSERT_KEY }}
      NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      REPOSITORY: ${{ github.repository }}
      WORKFLOW: ${{ github.workflow }}
      JOB: ${{ github.job }}
      RUN_ID: ${{ github.run_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - name: Generate Documentation
        run: |
          start_time=$(date +%s)
          cargo doc --no-deps --document-private-items
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          curl -X POST "https://insights-collector.newrelic.com/v1/accounts/${NEW_RELIC_ACCOUNT_ID}/events" \
            -H "Content-Type: application/json" \
            -H "X-Insert-Key: ${NEW_RELIC_INSERT_KEY}" \
            -d "[{
              \"eventType\": \"GitHubActionsCI\",
              \"repository\": \"${REPOSITORY}\",
              \"workflow\": \"${WORKFLOW}\",
              \"job\": \"${JOB}\",
              \"step\": \"Generate Documentation\",
              \"duration\": ${duration},
              \"run_id\": \"${RUN_ID}\",
              \"timestamp\": \"${timestamp}\"
            }]"

      - name: Upload Documentation Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: target/doc

  docker:
    name: Build Multi-Platform Docker Image
    runs-on: ubuntu-latest
    needs: [build, test, clippy]
    env:
      NEW_RELIC_INSERT_KEY: ${{ secrets.NEW_RELIC_INSERT_KEY }}
      NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      REPOSITORY: ${{ github.repository }}
      WORKFLOW: ${{ github.workflow }}
      JOB: ${{ github.job }}
      RUN_ID: ${{ github.run_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: ./docker-cache
          key: ${{ runner.os }}-docker-cache-${{ hashFiles('docker-bake.hcl') }}

      - name: Build and Push Docker Image
        run: |
          start_time=$(date +%s)
          docker buildx bake --push
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          curl -X POST "https://insights-collector.newrelic.com/v1/accounts/${NEW_RELIC_ACCOUNT_ID}/events" \
            -H "Content-Type: application/json" \
            -H "X-Insert-Key: ${NEW_RELIC_INSERT_KEY}" \
            -d "[{
              \"eventType\": \"GitHubActionsCI\",
              \"repository\": \"${REPOSITORY}\",
              \"workflow\": \"${WORKFLOW}\",
              \"job\": \"${JOB}\",
              \"step\": \"Build and Push Docker Image\",
              \"duration\": ${duration},
              \"run_id\": \"${RUN_ID}\",
              \"timestamp\": \"${timestamp}\"
            }]"