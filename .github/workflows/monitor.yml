name: GitHub Workflow Timing Collector

on:
  workflow_run:
    workflows: ["Rust CI"] # <-- List the workflows you want to monitor
    types:
      - completed
  workflow_dispatch:
    inputs:
      workflow_name:
        description: 'Workflow name to monitor'
        required: false
        default: 'ci.yml'

permissions:
  contents: read
  actions: read

env:
  NEW_RELIC_INSERT_KEY: ${{ secrets.NEW_RELIC_INSERT_KEY }}
  NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
  REPO: ${{ github.repository }}
  WORKFLOW_NAME: ci.yml # Default workflow name

jobs:
  collect_timings:
    name: Collect and Send Workflow Timings
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Latest Workflow Run ID
        run: |
          set -e
          echo "Starting to fetch latest completed workflow run ID for workflow: $WORKFLOW_NAME"

          echo "Fetching latest runs JSON..."
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW_NAME/runs?status=completed&per_page=1" -o latest_runs.json

          echo "Contents of latest_runs.json:"
          cat latest_runs.json

          latest_run_id=$(jq -r '.workflow_runs[0].id' latest_runs.json)

          echo "Latest run ID: $latest_run_id"
          echo "LATEST_RUN_ID=$latest_run_id" >> $GITHUB_ENV

          echo "Finished fetching latest workflow run ID."

      - name: Fetch Jobs and Steps
        run: |
          set -e
          echo "Starting to fetch jobs and steps for run ID: $LATEST_RUN_ID"

          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$REPO/actions/runs/$LATEST_RUN_ID/jobs" \
               -o jobs.json

          echo "Contents of jobs.json:"
          cat jobs.json

          echo "Finished fetching jobs and steps."

      - name: Upload jobs.json Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jobs-json
          path: jobs.json

      - name: Format Jobs and Steps
        run: |
          set -e
          echo "Current working directory:"
          pwd

          echo "Top-level contents:"
          ls -al

          echo "All directories and files recursively under current working directory:"
          find . -type d -print
          find . -type f -print
          echo "Starting to format jobs.json..."
          chmod +x .github/scripts/format-jobs.sh
          .github/scripts/format-jobs.sh jobs.json $LATEST_RUN_ID "$REPO" "$WORKFLOW_NAME"

          echo "Contents of formatted_jobs.json:"
          cat formatted_jobs.json

          echo "Finished formatting jobs and steps."

      - name: Upload formatted_jobs.json Artifact
        uses: actions/upload-artifact@v4
        with:
          name: formatted-jobs-json
          path: formatted_jobs.json

      - name: Send Timings to New Relic
        run: |
          set -e
          echo "Starting to send timing data to New Relic..."

          while IFS= read -r line; do
            # Each $line is a JSON object for a job
            event=$(jq -c --argjson obj "$line" \
              '{eventType: "GitHubWorkflowTiming"} + $obj' <<<"$line")
            echo "Sending event to New Relic: $event"
            curl -X POST "https://insights-collector.newrelic.com/v1/accounts/${{ secrets.NEW_RELIC_ACCOUNT_ID }}/events" \
              -H "Content-Type: application/json" \
              -H "X-Insert-Key: ${{ secrets.NEW_RELIC_INSERT_KEY }}" \
              -d "[$event]"
          done < formatted_jobs.json

          echo "Finished sending timing data to New Relic."
