name: Verify SBOM

on:
  workflow_call:
    inputs:
      image:
        description: 'Container image to verify SBOM for'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      image:
        description: 'Container image to verify SBOM for'
        required: true
        type: string
        default: 'ghcr.io/markcoleman/tarnished-api:latest'

permissions:
  contents: read
  packages: read
  id-token: write

jobs:
  verify-sbom:
    name: Verify SBOM and Signatures
    runs-on: ubuntu-latest
    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify image signature
        run: |
          cosign verify \
            --certificate-identity-regexp='https://github.com/markcoleman/tarnished-api/.*' \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            ${{ inputs.image }}

      - name: Verify SBOM attestation
        run: |
          cosign verify-attestation \
            --type=cyclonedx \
            --certificate-identity-regexp='https://github.com/markcoleman/tarnished-api/.*' \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            ${{ inputs.image }}

      - name: Download and verify SBOM content
        run: |
          # Download SBOM from the attestation
          cosign download attestation ${{ inputs.image }} \
            --predicate-type=https://cyclonedx.org/bom > sbom-attestation.json
          
          # Extract the SBOM content
          jq -r '.predicate' sbom-attestation.json > extracted-sbom.json
          
          # Basic validation that SBOM contains expected content
          if ! jq -e '.bomFormat' extracted-sbom.json > /dev/null; then
            echo "❌ SBOM does not contain expected bomFormat field"
            exit 1
          fi
          
          if ! jq -e '.components[]' extracted-sbom.json > /dev/null; then
            echo "❌ SBOM does not contain any components"
            exit 1
          fi
          
          echo "✅ SBOM verification successful"
          echo "📊 SBOM contains $(jq '.components | length' extracted-sbom.json) components"